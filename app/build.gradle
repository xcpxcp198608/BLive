apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.wiatec.blive"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 102
        versionName "v1.0.2"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    signingConfigs {
        release {
            storeFile file('/Users/xuchengpeng/KeyStore/234.jks')
            storePassword '123456'
            keyAlias "234"
            keyPassword '123456'
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName = ""
            if (variant.buildType.name == 'release') {
                fileName = applicationId + "_" + variant.versionName + "_" + variant.versionCode + "_${releaseTime()}.apk"
            } else if (variant.buildType.name == 'debug') {
                fileName = applicationId + "_" + variant.versionName + "_" + variant.versionCode + "_debug.apk"
            }
            outputFileName = new File(fileName)
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"


    compile('com.github.LuckSiege.PictureSelector:picture_library:v2.1.3') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.afollestad.material-dialogs:commons:0.9.5.0'
    compile "org.java-websocket:Java-WebSocket:1.3.5"
    compile 'com.paypal.sdk:paypal-android-sdk:2.15.3'
    compile files('src/main/libs/slf4j-api-1.7.2.jar')
    compile project(':module_common')
    compile project(':push')
}


